#!/usr/bin/python

import sys
from madrob import capability_level
from madrob import door_occupation_time
from madrob import execution_time
from madrob import passage_time
from madrob import roughness_of_door_actuation
from madrob import smoothness_of_door_actuation
from madrob import time_to_handle
from madrob import unsafety_of_door_operation

USAGE = """usage: madrob events.csv wrench.csv joint_state.csv testbed_config.yaml output_dir
events.csv: TOBEDEFINED
wrench.csv: TOBEDEFINED
joint_state.csv: TOBEDEFINED
testbed_config.yaml: TOBEDEFINED
"""

if __name__ == '__main__':

    print "MADROB PI computation"

    arg_len = 6
    if len(sys.argv) != arg_len:
        print USAGE
        sys.exit(-1)

    events_path, wrench_path, joint_state_path, testbed_conf_path, output_folder_path = sys.argv[1:]

    print "Running pi capability_level"
    is_ok = capability_level.run_pi(events_path, testbed_conf_path, output_folder_path)
    if not is_ok == 0:
        sys.exit(is_ok)

    print "Running pi door_occupation_time"
    is_ok = door_occupation_time.run_pi(events_path, testbed_conf_path, output_folder_path)
    if not is_ok == 0:
        sys.exit(is_ok)

    print "Running pi execution_time"
    is_ok = execution_time.run_pi(events_path, testbed_conf_path, output_folder_path)
    if not is_ok == 0:
        sys.exit(is_ok)

    print "Running pi passage_time"
    is_ok = passage_time.run_pi(events_path, testbed_conf_path, output_folder_path)
    if not is_ok == 0:
        sys.exit(is_ok)

    print "Running pi roughness_of_door_actuation"
    is_ok = roughness_of_door_actuation.run_pi(wrench_path, output_folder_path)
    if not is_ok == 0:
        sys.exit(is_ok)

    print "Running pi smoothness_of_door_actuation"
    is_ok = smoothness_of_door_actuation.run_pi(joint_state_path, output_folder_path)
    if not is_ok == 0:
        sys.exit(is_ok)

    print "Running pi time_to_handle"
    is_ok = time_to_handle.run_pi(events_path, output_folder_path)
    if not is_ok == 0:
        sys.exit(is_ok)

    print "Running pi unsafety_of_door_operation"
    is_ok = unsafety_of_door_operation.run_pi(joint_state_path, output_folder_path)
    if not is_ok == 0:
        sys.exit(is_ok)

    print "All computation done"
    sys.exit(0)
